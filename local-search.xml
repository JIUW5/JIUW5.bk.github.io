<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>冒泡</title>
    <link href="/2022/03/11/%E5%86%92%E6%B3%A1/"/>
    <url>/2022/03/11/%E5%86%92%E6%B3%A1/</url>
    
    <content type="html"><![CDATA[<p>这是我自己瞎捉摸的一篇博客哦</p><h1 id="C语言之冒泡排序"><a href="#C语言之冒泡排序" class="headerlink" title="C语言之冒泡排序"></a>C语言之冒泡排序</h1><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><code class="hljs c">  <span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;stdio.h&gt;</span></span><br>   <span class="hljs-comment">//作者：九五 时间：2021.12.17 </span><br>   <span class="hljs-comment">//冒泡排序法，自定义函数：swap函数 bubblesort函数 shuchu函数 </span><br>   <span class="hljs-comment">//定义swap函数 c语言自上而下执行，在主调函数上，面定义函数可以不要声明(在本文件中调用函数) </span><br>   <span class="hljs-type">void</span> <span class="hljs-title function_">swap</span><span class="hljs-params">(<span class="hljs-type">int</span> *num1,<span class="hljs-type">int</span>*num2)</span><span class="hljs-comment">//必须使用指针变量,没有返回值，必须使用指针变量从根本上改变数组元素的值。 </span><br>   &#123;<br>    <span class="hljs-type">int</span> temp = *num1;<span class="hljs-comment">//定义整型变量temp。c语言交换两个数必须借助第三个变量。 *num1 指的是num1上存在的值 </span><br>    *num1 = *num2;<br>    *num2 = temp;<br>   &#125;<br>   <span class="hljs-type">void</span> <span class="hljs-title function_">bubblesort</span> <span class="hljs-params">(<span class="hljs-type">int</span> arr[],<span class="hljs-type">int</span> len)</span> <span class="hljs-comment">//定义bubblesort函数  接收实参的数组:arr[]和数组中的int元素个数:len </span><br>   &#123;<br><span class="hljs-type">int</span> i;<br><span class="hljs-keyword">for</span>(i=<span class="hljs-number">0</span>;i&lt;len<span class="hljs-number">-1</span>;i++)<span class="hljs-comment">//数组的元素下标从0开始。对数组进行遍历,从i=0开始，结束位置是元素个数-1. </span><br><span class="hljs-comment">//十个元素，进行排序了 9次，自然剩下了最后一个数就没必要继续排序。 </span><br>&#123; <br><span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> j=i+<span class="hljs-number">1</span>;j&lt;=len<span class="hljs-number">-1</span>;j++)<span class="hljs-comment">//从第一个数开始，每个数进行比较，小的往后挪 </span><br>&#123;<br><span class="hljs-keyword">if</span> (arr[i] &lt; arr[j])<span class="hljs-comment">//如果arr[i]&lt;arr[i+1] 则执行swap函数 </span><br>&#123;<br>swap(&amp;arr[i],&amp;arr[j]);<span class="hljs-comment">//交换两个数组元素地址所存在的值 </span><br>&#125;<br>&#125;<br>&#125;<br>&#125;<br>   <span class="hljs-type">void</span> <span class="hljs-title function_">shuchu</span><span class="hljs-params">(<span class="hljs-type">int</span> arr[],<span class="hljs-type">int</span> len)</span><span class="hljs-comment">//定义print函数 </span><br>   &#123;<br>    <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> i =<span class="hljs-number">0</span>; i&lt; len; ++i)<span class="hljs-comment">//遍历执行数组arr[],对每个元素输出。 </span><br>&#123;<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%d &quot;</span>,arr[i]);<br>&#125;<br>   &#125;<br>   <span class="hljs-type">int</span> <span class="hljs-title function_">main</span><span class="hljs-params">()</span><br>   &#123;<br>    <span class="hljs-type">int</span> arr[] = &#123;<span class="hljs-number">95</span>,<span class="hljs-number">18</span>,<span class="hljs-number">56</span>,<span class="hljs-number">89</span>,<span class="hljs-number">54</span>,<span class="hljs-number">26</span>,<span class="hljs-number">17</span>,<span class="hljs-number">89</span>,<span class="hljs-number">62</span>,<span class="hljs-number">100</span>&#125;;  <span class="hljs-comment">//定义数组arr </span><br>    <span class="hljs-type">int</span> len = <span class="hljs-keyword">sizeof</span>(arr) / <span class="hljs-keyword">sizeof</span>(<span class="hljs-type">int</span>);<br>   <span class="hljs-comment">//表示数组arr中的元素个数,sizeof()是一种内存容量度量函数,这句表示用arr占用内存大小除以一个int型占用大小,得到arr中包含的int元素的个数。 </span><br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;排序之前:\n&quot;</span>);<br>shuchu(arr,len);<span class="hljs-comment">//调用print函数 </span><br>bubblesort(arr,len);<span class="hljs-comment">//调用bubblesort函数 </span><br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;\n&quot;</span>);<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;排序之后:\n&quot;</span>);<br>shuchu(arr,len);<span class="hljs-comment">//调用print函数 </span><br><span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>   &#125;<br></code></pre></td></tr></table></figure><p>#运行结果<br>    <img src="https://img-blog.csdnimg.cn/3ff9c8b645d949468546af1d90a7002c.png" alt="运行结果"></p><hr><p>鄙人博客：<a href="https://blog.csdn.net/qq_59392294/article/details/121991725">CSDN</a><br>小的不才，见谅见谅。</p>]]></content>
    
    
    <categories>
      
      <category>C</category>
      
    </categories>
    
    
    <tags>
      
      <tag>原创</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>娱乐，爱好</title>
    <link href="/2022/03/11/%E7%B4%A2%E9%9A%86%EF%BC%81/"/>
    <url>/2022/03/11/%E7%B4%A2%E9%9A%86%EF%BC%81/</url>
    
    <content type="html"><![CDATA[<p>海贼王</p><img src="/2022/03/11/%E7%B4%A2%E9%9A%86%EF%BC%81/test.png" class="" title="罗罗诺亚·索隆！！世界第一剑士">          <p><img src="/images/test.png" alt="草帽海贼团！！"></p>]]></content>
    
    
    <categories>
      
      <category>蒙奇·D</category>
      
    </categories>
    
    
    <tags>
      
      <tag>原创</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Hello World</title>
    <link href="/2022/03/11/hello-world/"/>
    <url>/2022/03/11/hello-world/</url>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo new <span class="hljs-string">&quot;My New Post&quot;</span><br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo server<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo generate<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo deploy<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
